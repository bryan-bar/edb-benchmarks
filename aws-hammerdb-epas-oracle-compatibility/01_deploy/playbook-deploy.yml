---
- hosts: all
  name: Install repository
  become: true
  gather_facts: false

  collections:
    - edb_devops.edb_postgres

  pre_tasks:
    - ansible.builtin.wait_for_connection:
      delay: 5
      timeout: 600

    - name: Gather facts for first time
      ansible.builtin.setup:

    - name: Initialize the user defined variables
      set_fact:
        enable_edb_repo: true

  roles:
    - role: setup_repo

- hosts: hammerdb_driver
  name: Install HammerDB
  become: true
  gather_facts: true

  collections:
    - edb_devops.edb_postgres

  roles:
    - role: setup_hammerdb

  tasks:
    - name: Load servers.yml
      ansible.builtin.include_vars:
        file: "{{ terraform_project_path }}/servers.yml"
        name: infra

    - name: Configure build.tcl
      ansible.builtin.template:
        dest: /home/{{ hammerdb_user }}/build.tcl
        src: templates/build.tcl.j2
        mode: '0755'
        owner: "{{ hammerdb_user }}"
        group: "{{ hammerdb_user }}"

    - name: Configure run.tcl
      ansible.builtin.template:
        dest: /home/{{ hammerdb_user }}/run.tcl
        src: templates/run.tcl.j2
        mode: '0755'
        owner: "{{ hammerdb_user }}"
        group: "{{ hammerdb_user }}"

    - name: Install patch
      ansible.builtin.package:
        name: patch

    - name: Copy patches to host
      ansible.builtin.copy:
        src: 0001-Match-postgresql-stored-procedures-to-oracle.patch
        dest: "/home/{{ hammerdb_user }}/0001-Match-postgresql-stored-procedures-to-oracle.patch"
        owner: "{{ hammerdb_user }}"
        group: "{{ hammerdb_user }}"
        mode: '0644'
      become: true

    - name: Apply HammerDB patches
      ansible.posix.patch:
        src: 0001-Match-postgresql-stored-procedures-to-oracle.patch
        basedir: "/home/{{ hammerdb_user }}/HammerDB-{{ hammerdb_version }}"
        strip: 1
      become_user: "hammerdb"

- hosts: primary
  name: Setup EPAS
  become: true
  gather_facts: false

  collections:
    - edb_devops.edb_postgres

  pre_tasks:
    - name: Initialize the user defined variables
      set_fact:
        pg_hba_ip_addresses:
          - contype: "host"
            users: "all"
            databases: "all"
            method: "trust"
            source: "10.0.0.0/24"
            state: present

        pg_postgres_conf_params:
          - name: default_with_rowids
            value: true

  roles:
    - install_dbserver
    - init_dbserver
    - manage_dbserver
