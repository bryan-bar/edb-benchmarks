---
- hosts: primary
  name: Init pgbench data
  become: true
  gather_facts: false

  tasks:
    - name: Build the mapping dict
      ansible.builtin.set_fact:
        pg_versions_mapping: >
          {{ pg_versions_mapping | default({}) |
              combine({
                (item | split('.'))[0] : item,
              })
          }}
      loop: "{{ pg_versions }}"

    - name: Find min version
      ansible.builtin.set_fact:
        pg_min_version: "{{ pg_versions_mapping[pg_versions_mapping.keys() | map('int') | min | string] }}"

    - name: Start only one PostgreSQL instance
      ansible.builtin.command:
        cmd: >
          /usr/local/pgsql-{{ pg_min_version }}/bin/pg_ctl -D /pgdata/data/{{ pg_min_version }} -l /tmp/postgres.log start
      become_user: "{{ pg_owner }}"

    - name: Wait for Postgres to be ready
      ansible.builtin.command:
        cmd: >
          /usr/local/pgsql-{{ pg_min_version }}/bin/pg_isready
      become_user: "{{ pg_owner }}"
      register: pg_isready
      until: "pg_isready is not failed"
      retries: 10
      delay: 10

    - name: Create the pgbench database
      ansible.builtin.command:
        cmd: >
          /usr/local/pgsql-{{ pg_min_version }}/bin/createdb pgbench
      become_user: "{{ pg_owner }}"

    - name: Populate pgbench database
      ansible.builtin.command:
        cmd: >
          /usr/local/pgsql-{{ pg_min_version }}/bin/pgbench -i -s {{ pgbench_scale_factor }} -q pgbench
      become_user: "{{ pg_owner }}"
      # 04/21/2023 - Commented because was causing the benchmark to fail
      #async: 180000
      #poll: 60

    - name: Make sure {{ pg_data }}/backup exists
      ansible.builtin.file:
        path: "{{ pg_data }}/backup"
        state: directory
        owner: "{{ pg_owner }}"
        group: "{{ pg_group }}"
      become: true

    - name: Take a backup
      ansible.builtin.command:
        cmd: >
          /usr/local/pgsql-{{ pg_min_version }}/bin/pg_dump -Fd -j 4 -f {{ pg_data }}/backup -d pgbench
      become_user: "{{ pg_owner }}"
      async: 180000
      poll: 60

    - name: Drop pgbench DB
      ansible.builtin.command:
        cmd: >
          /usr/local/pgsql-{{ pg_min_version }}/bin/dropdb pgbench
      become_user: "{{ pg_owner }}"

    - name: Stop PostgreSQL instance
      ansible.builtin.command:
        cmd: >
          /usr/local/pgsql-{{ pg_min_version }}/bin/pg_ctl -D /pgdata/data/{{ pg_min_version }} -l /tmp/postgres.log stop
      become_user: "{{ pg_owner }}"
