---
  - name: Check if vars file exists
    ansible.builtin.stat:
      path: "{{ input_file }}"
    register: file_result

  - name: Load input file
    ansible.builtin.include_vars:
      file: "{{ input_file }}"
      name: user_input
    when: file_result.stat.exists

  - name: Generate environment yaml file based on variable keys
    ansible.builtin.copy:
      content: |
        # Ansible Generated file inside of {{ playbook_dir }}
        # lowercase anible variables mapped to UPPERCASE bash environment variables
        {% for key, value in user_input.items() if value != '<secret>' %}
        {{ key }}: "{{ '{{' }} lookup('env', '{{ key | upper }}') | default('{{ value }}', true) {{ '}}' }}"
        {% endfor %}
        dummy: value
      dest: "{{ env_yml_file }}"

  - name: Generate credential yaml file based on variable keys
    ansible.builtin.copy:
      content: |
        # Ansible Generated file inside of {{ playbook_dir }}
        # lowercase anible variables mapped to UPPERCASE bash environment variables
        {% for key, value in user_input.items() if value == '<secret>' %}
        {{ key }}: "{{ '{{' }} lookup('env', '{{ key | upper }}') {{ '}}' }}"
        {% endfor %}
        dummy: value
      dest: "{{ credentials_file }}"
      mode: 0400
    no_log: true

  - name: Load generated variable file
    ansible.builtin.include_vars:
      file: "{{ env_yml_file }}"
      name: env_yml_input

  - name: Check if vars file exists
    ansible.builtin.stat:
      path: "{{ vars_file }}"
    register: file_result

  - name: Load vars file
    ansible.builtin.include_vars:
      file: "{{ vars_file }}"
      name: vars_input
    when: file_result.stat.exists

  - name: Check if interpolate file exists
    ansible.builtin.stat:
      path: "{{ interpolate_file }}"
    register: file_result

  - name: Load interpolate file
    ansible.builtin.include_vars:
      file: "{{ interpolate_file }}"
      name: interpolate_input
    when: file_result.stat.exists


  - name: Check if overrides is a file
    ansible.builtin.stat:
      path: "{{ overrides }}"
    register: file_result

  - name: Load overrides file
    ansible.builtin.include_vars:
      file: "{{ overrides }}"
      name: env_overrides
    when: file_result.stat.exists

  - name: Load stringified json overrides
    ansible.builtin.set_fact:
      env_overrides: "{{ overrides | default('{}', true) | from_json }}"
    when: not file_result.stat.exists

  - name: Set interpolate variable
    ansible.builtin.set_fact:
      interpolate: "{{ default_variables | combine(vars_input, env_yml_input, env_overrides, static_variables, recursive=true) }}"

  - name: User input overrides
    ansible.builtin.pause:
      prompt: "Enter a value for variable: {{ item.key }}\noriginal value: {{ item.value }}\n"
      echo: True
    register: prompt_input
    loop: "{{ interpolate | default({}) | dict2items }}"
    when: interactive

  - name: Update dictionary with user input
    ansible.builtin.set_fact:
      interpolate: "{{ interpolate | combine({item.item.key: (item.user_input | default(item.item.value, true) )}) }}"
    loop: "{{ prompt_input.results }}"
    when: interactive

  - name: Set final variable with interpolate_input
    ansible.builtin.set_fact:
      final: "{{ interpolate | combine(interpolate_input, recursive=true) }}"

  - name: Generate final yaml file
    ansible.builtin.copy:
      content: |
        # Ansible Generated file inside of {{ playbook_dir }}
        # lowercase anible variables mapped to UPPERCASE bash environment variables
        {{ final | to_nice_yaml(indent=2) }}
      dest: "{{ env_yml_file }}"

  - name: Load final yaml file
    ansible.builtin.include_vars:
      file: "{{ env_yml_file }}"
      name: final

  - name: Create results directory
    ansible.builtin.file:
      path: "{{ static_variables.results_directory }}"
      state: directory

  - name: Copy environment.yml file
    ansible.builtin.copy:
      src: "{{ env_yml_file }}"
      dest: "{{ static_variables.results_directory }}/{{ env_yml_file | basename }}"

  - name: Create and copy stringified json
    ansible.builtin.copy:
      content: |
        {{ final | to_json(separators=(',',':'), sort_keys=true) }}
      dest: "{{ static_variables.results_directory }}/{{ (env_yml_file | basename | splitext)[0] }}.json"
